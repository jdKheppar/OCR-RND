# -*- coding: utf-8 -*-
"""easy_OCR_PDFs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VScqXR-2mo_d5N4lY16Ax2G-WnVensqY
"""

!pip install pdf2image easyocr pillow
!apt-get install -y poppler-utils
import os
from pdf2image import convert_from_path
from PIL import Image
import easyocr
Image.MAX_IMAGE_PIXELS = None

def process_image(image):
    # Convert to black and white
    bw_image = image.convert("L")

    # Reduce quality to 10
    bw_image.save("temp.jpg", "jpeg")

    return bw_image

def extract_text_from_image(image):
    reader = easyocr.Reader(['en'])
    extract_info = reader.readtext(image)
    text = "\n".join(result[1] for result in extract_info)
    return text

# Get all PDF files in the current directory
pdf_files = [file for file in os.listdir() if file.endswith(".pdf")]
current_directory = os.getcwd()
# Process each PDF
for pdf_file in pdf_files:
  os.path.splitext(os.path.basename(pdf_file))[0]
  pdf_file_path = os.path.join(current_directory, pdf_file)
  images = convert_from_path(pdf_file_path)
  print(pdf_file)
  # Process each image
  for i, image in enumerate(images):
      # Process image
      #processed_image = process_image(image)

      # Extract text
      image_path = f"{pdf_file}_page_{i+1}.png"
      image.save(image_path)

      text = extract_text_from_image(image_path)

      # Save text to a file with the same name as the PDF
      output_filename = f"{pdf_file}_page_{i+1}.txt"
      with open(output_filename, "w") as text_file:
          text_file.write(text)

  print(f"Processed {len(images)} pages from {pdf_file}")