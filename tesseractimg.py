# -*- coding: utf-8 -*-
"""tesseractImg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWlIxkEtxSmiPHb7B9A1jJFo3enjV6qe
"""

!apt-get install -y poppler-utils
!pip install pytesseract pillow
!apt-get install -y tesseract-ocr
from PIL import Image
import pytesseract

# Path to the Tesseract executable (adjust this based on your installation)
pytesseract.pytesseract.tesseract_cmd = '/usr/bin/tesseract'

# Path to the image file in Google Colab (replace with your image file)
image_path = '/content/1.jpeg'

# Load the image
image = Image.open(image_path)

# Use pytesseract to extract text from the image
extracted_text = pytesseract.image_to_string(image)
print(extracted_text)
# Path to the text file where the extracted text will be saved
output_text_file = "/content/output_text.txt"

# Save the extracted text to a text file
with open(output_text_file, 'w', encoding='utf-8') as file:
    file.write(extracted_text)

print(f"Text extracted from the image has been saved to {output_text_file}.")

from PIL import Image, ImageEnhance, ImageFilter
import pytesseract

# Path to the Tesseract executable (adjust this based on your installation)
pytesseract.pytesseract.tesseract_cmd = '/usr/bin/tesseract'

# Path to the image file in Google Colab (replace with your image file)
image_path = '/content/good.jpeg'

# Load the image
image = Image.open(image_path)

# Convert the image to grayscale
gray_image = image.convert('L')

# Apply Gaussian blur to the grayscale image
blurred_image = gray_image.filter(ImageFilter.GaussianBlur(radius=2))

# Adjust contrast
contrast_enhancer = ImageEnhance.Contrast(blurred_image)
contrast_enhanced_image = contrast_enhancer.enhance(1.5)

# Apply histogram equalization
equalized_image = ImageEnhance.Contrast(contrast_enhanced_image).enhance(1.5)

# Use pytesseract to extract text from the preprocessed image
extracted_text = pytesseract.image_to_string(equalized_image)

print(extracted_text)

# Path to the text file where the extracted text will be saved
output_text_file = "/content/output_text.txt"

# Save the extracted text to a text file
with open(output_text_file, 'w', encoding='utf-8') as file:
    file.write(extracted_text)

print(f"Text extracted from the image has been saved to {output_text_file}.")