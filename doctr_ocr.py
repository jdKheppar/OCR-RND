# -*- coding: utf-8 -*-
"""doctr_ocr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MHXnjRGAbqXgZnquyROYR_LQeL7KK7IW
"""

#docTR
! pip install python-doctr
# for TensorFlow
! pip install "python-doctr[tf]"
# for PyTorch
! pip install "python-doctr[torch]"

from doctr.io import DocumentFile
from doctr.models import ocr_predictor
model = ocr_predictor(det_arch = 'db_resnet50',
                      reco_arch = 'crnn_vgg16_bn',
                      pretrained = True
                     )

# read file
img_DOCTR = DocumentFile.from_images("image2.jpeg")

# use pre-trained model
result = model(img_DOCTR)

# export the result as a nested dict
extract_info_DOCTR = result.export()



result_DOCTR=extract_info_DOCTR['pages']
for i in result_DOCTR:

  for j in i['blocks']:
    for k in j['lines']:
      for l in k['words']:
        print(l['value'])

img_DOCTR1 = DocumentFile.from_images("image3.jpeg")

# use pre-trained model
result1 = model(img_DOCTR1)

# export the result as a nested dict
extract_info_DOCTR1 = result1.export()
result_DOCTR1=extract_info_DOCTR1['pages']
for i in result_DOCTR1:

  for j in i['blocks']:
    for k in j['lines']:
      for l in k['words']:
        print(l['value'])

img_DOCTR1 = DocumentFile.from_images("image4.jpeg")

# use pre-trained model
result1 = model(img_DOCTR1)

# export the result as a nested dict
extract_info_DOCTR1 = result1.export()
result_DOCTR1=extract_info_DOCTR1['pages']
for i in result_DOCTR1:

  for j in i['blocks']:
    for k in j['lines']:
      for l in k['words']:
        print(l['value'])

img_DOCTR1 = DocumentFile.from_images("image5.jpeg")

# use pre-trained model
result1 = model(img_DOCTR1)

# export the result as a nested dict
extract_info_DOCTR1 = result1.export()
result_DOCTR1=extract_info_DOCTR1['pages']
for i in result_DOCTR1:

  for j in i['blocks']:
    for k in j['lines']:
      for l in k['words']:
        print(l['value'])